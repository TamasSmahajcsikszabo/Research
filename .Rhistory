annotate_base(output_file ="C:/Users/tamas/OneDrive/Dokumentumok/Kutatás/first_example.pptx")
library(zip)
library(zip)
install.packages("zip")
library(officer)
library(magrittr)
library(zip)
install.packages("zip")
library(officer)
library(magrittr)
library(zip)
my_pres <- read_pptx()
my_pres <- my_pres %>%
add_slide(layout = "Title and Content", master = "Office Theme")
layout_summary(my_pres)
my_pres <- my_pres %>%
ph_with_text(type = "title", str = "A title") %>%
ph_with_text(type = "ftr", str = "A footer") %>%
ph_with_text(type = "dt", str = format(Sys.Date())) %>%
ph_with_text(type = "sldNum", str = "slide 1") %>%
ph_with_text(str = "Hello world", type = "body")
annotate_base(output_file ="C:/Users/tamas/OneDrive/Dokumentumok/Kutatás/first_example.pptx")
annotate_base(output_file ="first_example.pptx")
annotate_base(output_file ="C:/Users/tamas/OneDrive/Dokumentumok/Kutatás/first_example.pptx")
library(officer)
library(magrittr)
library(zip)
my_pres <- read_pptx()
my_pres <- my_pres %>%
add_slide(layout = "Title and Content", master = "Office Theme")
layout_summary(my_pres)
my_pres <- my_pres %>%
ph_with_text(type = "title", str = "A title") %>%
ph_with_text(type = "ftr", str = "A footer") %>%
ph_with_text(type = "dt", str = format(Sys.Date())) %>%
ph_with_text(type = "sldNum", str = "slide 1") %>%
ph_with_text(str = "Hello world", type = "body")
print(my_pres, target = "C:/Users/tamas/OneDrive/Dokumentumok/Kutatás/first_example.pptx")
install.packages("xlsx")
library(tidyverse)
data <- read.xlsx("FaceDot2015_16_Tamasnak.xlsx", sheetIndex = 1)
library(xlsx)
data <- read.xlsx("FaceDot2015_16_Tamasnak.xlsx", sheetIndex = 1)
data <- read_xlsx("FaceDot2015_16_Tamasnak.xlsx", sheet = 1)
library(readxl)
data <- read_xlsx("FaceDot2015_16_Tamasnak.xlsx", sheet = 1)
View(data)
names(data)
data[, c(110:118)]
data <- read_xlsx("FaceDot2015_16_Tamasnak.xlsx", sheet = 1)[, c(1:116)]
data <- data[, c(1:116)]
names(data)
### emotions:
emotions <- read_xlsx("probak_arcos_dotprobe.xlsx", sheet = 1)
emotions_adjusted <- emotions %>% dplyr::select(TRIAL, Emotion) %>%
mutate(TRIAL = paste("X", row_number(), sep="")) %>%
rename("trial" = "TRIAL") %>%
mutate(Emotion = fct_recode(Emotion,
"sad" = "Sad"))
View(emotions_adjusted)
View(emotions)
### emotions:
emotions <- read_xlsx("probak_arcos_dotprobe.xlsx", sheet = 1)
emotions_adjusted <- emotions %>% dplyr::select(TRIAL, Emotion) %>%
mutate(TRIAL = paste("X", row_number(), sep="")) %>%
rename("trial" = "TRIAL") %>%
mutate(Emotion = fct_recode(Emotion,
"sad" = "Sad"))
### defining to be exlcuded inaccurate datasets:
excluded_records <- c(300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321,
106, 109, 111, 119, 131, 159, 172, 438, 444, 121, 526, 555, 558, 572, 654, 677, 729, 812, 855, 856)
data_cleaned <- data %>% filter(!Subject %in% excluded_records)
View(data_cleaned)
colnames(data_cleaned[, c(1,2)]) <- c("year", "subject")
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(felvetel.eve, Subject, trial, RT)
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(year, subject, trial, RT)
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(year, subject, trial, RT)
colnames(data_cleaned[, c(1,2)]) <- c("year", "subject")
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(year, subject, trial, RT)
View(data)
ed
data_cleaned <- data %>% filter(!Subject %in% excluded_records)
colnames(data_cleaned[, c(1,2)]) <- c("year", "subject")
View(data_cleaned)
names(data_cleaned)
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(`felvetel eve`, Subject, trial, RT)
data_cleaned <- data %>% filter(!Subject %in% excluded_records)
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(`felvetel eve`, Subject, trial, RT)
View(tidied)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram()
source('~/Research/poster_helper.R', echo=TRUE)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20) +
xlim(0,2500)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500) +
theme_classic()
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500) +
theme_gray()
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500) +
theme_gray() +
labs(x = "Reakcióidő (ms)",
y = "Gyakoriság")
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500) +
theme_gray() +
labs(title = "Alap histogram",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500) +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
xlim(0,2500) +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
scale_x_continuous(breaks = seq(0,2500, by = 100))
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
scale_x_continuous(breaks = seq(0,2500, by = 100)) +
xlim(0,2500)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
scale_x_continuous(breaks = 100) +
xlim(0,2500)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
xlim(0,2500)
tidied
RT_mean <- mean(tidied$RT, na.rm = TRUE)
RT_sd <- sd(tidied$RT, na.rm = TRUE)
tidied <- tidied %>%
mutate(RT_norm = (RT_mean - RT) / RT_sd)
View(tidied)
tidied %>%
ggplot(aes(RT_norm)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
xlim(0,2500)
tidied %>%
ggplot(aes(RT_norm)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
tidied %>%
ggplot(aes(RT_norm)) +
geom_histogram(binwidth = 1, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
tidied %>%
ggplot(aes(RT_norm)) +
geom_histogram(binwidth = 0.5, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
tidied <- tidied %>%
mutate(RT_norm = (RT - RT_mean) / RT_sd)
tidied <- tidied %>%
mutate(RT_norm = (RT - RT_mean) / RT_sd)
tidied <- data_cleaned %>%
gather(3:116, key="trial", value="RT") %>%
dplyr::select(`felvetel eve`, Subject, trial, RT)
RT_mean <- mean(tidied$RT, na.rm = TRUE)
RT_sd <- sd(tidied$RT, na.rm = TRUE)
tidied <- tidied %>%
mutate(RT_norm = (RT - RT_mean) / RT_sd)
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
xlim(0,2500)
tidied %>%
ggplot(aes(RT_norm)) +
geom_histogram(binwidth = 0.5, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
tidied %>%
ggplot(aes(RT_norm)) +
geom_histogram(binwidth = 0.1, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
tidied %>%
ggplot(aes(RT_norm)) +
geom_density(fill = "white", color = "black") +
theme_gray()
summary(tidied$RT_norm)
Hmisc::describe(tidied$RT_norm)
sd(tidied$RT_norm)
sd(tidied$RT_norm, na.rm = TRUE)
tidied %>%
ggplot(aes(RT)) +
geom_density(fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
# base histogram
tidied %>%
ggplot(aes(RT)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Eredeti adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság") +
xlim(0,2500)
source("kitin/function_dev.R")
source("~/kitin/function_dev.R")
source('~/Research/poster_helper.R', encoding = 'UTF-8')
source('~/kitin/functions dev.R', encoding = 'UTF-8')
source('~/kitin/functions dev.R', encoding = 'UTF-8')
source('~/kitin/functions_dev.R', encoding = 'UTF-8')
View(TS_est)
View(winsorize)
winsorized <- winsorize(tidied$RT)
hist(winsorized)
winsorized
tidied <- tidied %>%
mutate(winsorized = winsorized)
View(winsorize)
View(slope_est)
View(slope_est)
winsorized <- winsorize(tidied$RT)
winsorized <-data.frame(RT_win = winsorize(tidied$RT))
winsorized%>%
ggplot(aes(RT_win)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Winsorizált adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
View(winsorize)
x = tidied$RT
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
threshold_index <- floor(length(x) * tr)
tr = 0.2
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x)
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
x_wins[i] <- winsorized_value_lower
}
for (i in seq(1, threshold_index)) {
x_wins <- sort(x_wins, decreasing = TRUE)
x_wins[i] <- winsorized_value_upper
}
x_wins <- sort(x_wins)
x_wins
threshold_index
seq(1, threshold_index)
floor(length(x) * tr)
hist(x_wins)
x_wins>400
x_wins>4000
x_wins>4000
i
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
winsorize <- function(x, tr = 0.2) {
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
for (i in seq(1, threshold_index)) {
x_wins <- sort(x_wins, decreasing = TRUE)
if (x_wins[i] > winsorized_value_upper) {x_wins[i] <- winsorized_value_upper}
}
x_wins <- sort(x_wins)
x_wins
}
n
winsorized <-data.frame(RT_win = winsorize(tidied$RT))
winsorized%>%
ggplot(aes(RT_win)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Winsorizált adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
View(winsorized)
x = tidied$RT
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
for (i in seq(1, threshold_index)) {
x_wins <- sort(x_wins, decreasing = TRUE)
if (x_wins[i] > winsorized_value_upper) {x_wins[i] <- winsorized_value_upper}
}
x_wins <- sort(x_wins)
x_wins
sort(x_wins, decreasing = RUE)
sort(x_wins, decreasing = tRUE)
sort(x_wins, decreasing = TRUE)
winsorized_value_upper
nsorize <- function(x, tr = 0.2) {
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
winsorize <- function(x, tr = 0.2) {
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
x_wins <- sort(x_wins, decreasing = TRUE)
for (i in seq(1, threshold_index)) {
if (x_wins[i] > winsorized_value_upper) {x_wins[i] <- winsorized_value_upper}
}
x_wins <- sort(x_wins)
x_wins
}
winsorized <-data.frame(RT_win = winsorize(tidied$RT))
winsorized <-data.frame(RT_win = winsorize(tidied$RT))
winsorized%>%
ggplot(aes(RT_win)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Winsorizált adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
x_wins <- sort(x_wins, decreasing = TRUE)
for (i in seq(1, threshold_index)) {
if (x_wins[i] > winsorized_value_upper) {x_wins[i] <- winsorized_value_upper}
}
x_wins <- sort(x_wins)
x_wins
winsorize <- function(x, tr = 0.2) {
if (!is.vector(x)) {
x <- as_vector(x)
} else {
x
}
threshold_index <- floor(length(x) * tr)
x <- sort(x)
winsorized_value_lower <- x[threshold_index + 1]
x <- sort(x, decreasing = TRUE)
winsorized_value_upper <- sort(x, decreasing = TRUE)[threshold_index + 1]
x_wins <- sort(x)
for (i in seq(1, threshold_index)) {
if (x_wins[i] < winsorized_value_lower) {x_wins[i] <- winsorized_value_lower}
}
x_wins <- sort(x_wins, decreasing = TRUE)
for (i in seq(1, threshold_index)) {
if (x_wins[i] > winsorized_value_upper) {x_wins[i] <- winsorized_value_upper}
}
x_wins <- sort(x_wins)
x_wins
}
winsorized <-data.frame(RT_win = winsorize(tidied$RT))
winsorized%>%
ggplot(aes(RT_win)) +
geom_histogram(binwidth = 20, fill = "white", color = "black") +
theme_gray() +
labs(title = "Winsorizált adatok",
x = "Reakcióidő (ms)",
y = "Gyakoriság")
